pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)((ead)|(dr))")) |>
mutate(
lead_nationality = coalesce(`Leader`,`Leader, Organizer`)
)
)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)((ead)|(dr))")) |>
mutate(
lead_nationality = coalesce(`Leader`,`Leader, Organizer`)
)
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse(termination_reason,
"success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment",
"Lack of time")
)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse(
"success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment",
"Lack of time")
)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse(
"success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment", "Lack of time")
) |> fct_lump(n = 6)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse(
"success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment", "Lack of time")
) |> fct_lump(n = 6)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
df5
library(ggplot2)
library(tidyverse)
library(tidyr)
library(lubridate)
library(stringr)
library(dplyr)
library(ggridges)
library(ggdist)
tuesdata <- tidytuesdayR::tt_load('2020-09-22')
(expeditions <- tuesdata$expeditions)
(peaks <- tuesdata$peaks)
(members <- tuesdata$members)
df1 <- inner_join(expeditions, peaks, by="peak_id")
members |> distinct(expedition_role) |> filter(str_detect(expedition_role, "(L|l)((ead(er))|(dr))"))
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)((ead)|(dr))")) |>
mutate(
lead_nationality = coalesce(`Leader`,`Deputy Leader`, `Co-Leader`, `Climbing Leader`)
)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df4 <- df3 |> filter(!is.na(basecamp_date) & !is.na(highpoint_date) & !is.na(lead_nationality) & !is.na(highpoint_metres) & (is.na(first_ascent_year) |first_ascent_year != 201) )
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse("success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment", "Lack of time")
) |> fct_lump(n = 6)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
)
df5
#NA Counts
na_count <- df5 |> summarise(across(everything(), ~sum(is.na(.)))) |> pivot_longer(cols = everything(), names_to = "Column", values_to = "NA Values")
print(na_count)
#Distributions Of Numeric (GEOM_HISTOGRAM)
df_numeric <- df5 |> select(where(is.numeric)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_numeric, aes(x = value)) + geom_histogram(bins = 20) +  facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
#Distributions Of Factor (GEOM_BAR)
df_factor <- df5 |> select(where(is.factor)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_factor, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") +  labs( x = "Value", y = "Frequency")
#Distribution Of Binary (GEOM_BAR)
df_bool <- df5 |> select(where(is.logical)) |>  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") |> mutate(value = factor(value))
ggplot(df_bool, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
p1 <- ggplot(df5, aes(x = height_metres, y = success, size = party_size, color = years_since_first)) +
geom_point() +
facet_wrap(~oxygen_used) +
geom_label(aes(label = ifelse(is.na(years_since_first), "0", NA)),
show.legend = FALSE, fill="red") +
labs(title = "Relating Success By Oxygen Use (T/F), Party, and Time Elapsed Since First Peak Completion",
subtitle= "Climbs on never completed peaks marked in Red",
x = "Peak Height",
y="Fraction To Peak Achieved")
p1
#ggsave("plot.png", plot = p1, width = 8, height = 6, dpi = 1000)
p2 <- ggplot(df5, aes(x = success, y = season, fill = has_hired)) +
geom_density_ridges(scale = 1, alpha=0.5) +
labs(title = "Relating Success By Use Of Hired Personel For Given Seasons",
x = "Completion Fraction",
y = "Season") +
theme_minimal() #+
#facet_wrap(~is_local_leader)
p2
library(tidymodels)
model <- linear_reg() |> set_engine("lm")
wf <- workflow() |> add_model(model) |> add_formula()
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df4 <- df3 |> filter(!is.na(basecamp_date) & !is.na(highpoint_date) & !is.na(lead_nationality) & !is.na(highpoint_metres) & (is.na(first_ascent_year) |first_ascent_year != 201) )
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  fct_lump(fct_collapse(termination_reason,
"success" = c("Success (main peak)", "Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)", "Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)", "Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment", "Lack of time")
), n = 6)) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
#NA Counts
na_count <- df5 |> summarise(across(everything(), ~sum(is.na(.)))) |> pivot_longer(cols = everything(), names_to = "Column", values_to = "NA Values")
print(na_count)
#Distributions Of Numeric (GEOM_HISTOGRAM)
df_numeric <- df5 |> select(where(is.numeric)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_numeric, aes(x = value)) + geom_histogram(bins = 20) +  facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
#Distributions Of Factor (GEOM_BAR)
df_factor <- df5 |> select(where(is.factor)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_factor, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") +  labs( x = "Value", y = "Frequency")
#Distribution Of Binary (GEOM_BAR)
df_bool <- df5 |> select(where(is.logical)) |>  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") |> mutate(value = factor(value))
ggplot(df_bool, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
)
rearrange(lead_nationality)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
rearrange(lead_nationality)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
arrange(lead_nationality)
(df3 <- inner_join(df1,df2, by="expedition_id"))
library(ggplot2)
library(tidyverse)
library(tidyr)
library(lubridate)
library(stringr)
library(dplyr)
library(ggridges)
library(ggdist)
tuesdata <- tidytuesdayR::tt_load('2020-09-22')
(expeditions <- tuesdata$expeditions)
(peaks <- tuesdata$peaks)
(members <- tuesdata$members)
df1 <- inner_join(expeditions, peaks, by="peak_id")
members |> distinct(expedition_role)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
arrange(lead_nationality)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df4 <- df3 |> filter(!is.na(basecamp_date) & !is.na(highpoint_date) & !is.na(lead_nationality) & !is.na(highpoint_metres) & (is.na(first_ascent_year) |first_ascent_year != 201) )
obtain_simplified_termination_reason <- function(col){
col  |>
fct_collapse("success" = c("Success (main peak)",
"Success (claimed)"),
"semisuccess" = c("Success (subpeak)"),
"accident" = c("Accident (death or serious injury)",
"Illness, AMS, exhaustion, or frostbite"),
"weather" = c("Bad weather (storms, high winds)",
"Bad conditions (deep snow, avalanching, falling ice, or rock)"),
"skillorganization" = c("Route technically too difficult, lack of experience, strength, or motivation",
"Lack (or loss) of supplies or equipment", "Lack of time")
) |> fct_lump(n = 6)
}
df5 <- df4 |>
mutate(
is_local_leader = (lead_nationality == 'Nepal'),
years_since_first = (year - first_ascent_year),
success = highpoint_metres/height_metres,
duration = as.numeric(difftime(highpoint_date, basecamp_date, units="days")),
deaths = member_deaths + hired_staff_deaths,
party_size = members + hired_staff,
has_hired = (hired_staff != 0),
) |>
mutate(
season = as.factor(season),
termination =  obtain_simplified_termination_reason(termination_reason)
) |>
select(
season, year, years_since_first, duration,height_metres, is_local_leader, party_size, has_hired, oxygen_used, success, termination, deaths
#,first_ascent_year,basecamp_date, highpoint_date, highpoint_metres
)
#NA Counts
na_count <- df5 |> summarise(across(everything(), ~sum(is.na(.)))) |> pivot_longer(cols = everything(), names_to = "Column", values_to = "NA Values")
print(na_count)
#Distributions Of Numeric (GEOM_HISTOGRAM)
df_numeric <- df5 |> select(where(is.numeric)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_numeric, aes(x = value)) + geom_histogram(bins = 20) +  facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
#Distributions Of Factor (GEOM_BAR)
df_factor <- df5 |> select(where(is.factor)) |> pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
ggplot(df_factor, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") +  labs( x = "Value", y = "Frequency")
#Distribution Of Binary (GEOM_BAR)
df_bool <- df5 |> select(where(is.logical)) |>  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") |> mutate(value = factor(value))
ggplot(df_bool, aes(x = value)) + geom_bar() + facet_wrap(~ variable, scales = "free") + labs(x = "Value", y = "Frequency")
p1 <- ggplot(df5, aes(x = height_metres, y = success, size = party_size, color = years_since_first)) +
geom_point() +
facet_wrap(~oxygen_used) +
geom_label(aes(label = ifelse(is.na(years_since_first), "0", NA)),
show.legend = FALSE, fill="red") +
labs(title = "Relating Success By Oxygen Use (T/F), Party, and Time Elapsed Since First Peak Completion",
subtitle= "Climbs on never completed peaks marked in Red",
x = "Peak Height",
y="Fraction To Peak Achieved")
p1
#ggsave("plot.png", plot = p1, width = 8, height = 6, dpi = 1000)
p2 <- ggplot(df5, aes(x = success, y = season, fill = has_hired)) +
geom_density_ridges(scale = 1, alpha=0.5) +
labs(title = "Relating Success By Use Of Hired Personel For Given Seasons",
x = "Completion Fraction",
y = "Season") +
theme_minimal() #+
#facet_wrap(~is_local_leader)
p2
library(tidymodels)
model <- linear_reg() |> set_engine("lm")
wf <- workflow() |> add_model(model) |> add_formula()
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
reorder(lead_nationality)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
reorder(lead_nationality)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
mutate(
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
relocate(lead_nationality)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)(ead|dr)")) |>
mutate(
all_leadership = paste(na.omit(c_across(-expedition_id))),
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
relocate(lead_nationality)
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ", "), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)(ead|dr)")) |>
mutate(
all_leadership = paste(na.omit(c_across(-expedition_id)),collapse = " "),
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
relocate(lead_nationality)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(citizens = paste(citizenship, collapse = ","), .groups = "drop") |>
pivot_wider(names_from = expedition_role, values_from = citizens) |>
select(expedition_id, matches("(L|l)(ead|dr)")) |>
mutate(
all_leadership = paste(na.omit(c_across(-expedition_id)),collapse = ","),
lead_nationality = coalesce(Leader, `Co-Leader`, `Deputy Leader`, `Climbing Leader`)
) |>
relocate(lead_nationality)
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
group_by(expedition_id, expedition_role) |>
summarize(count = n(), .groups = "drop") |>
pivot_wider(
names_from = expedition_role,
values_from = count,
values_fill = 0
)
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
filter(str_detect(expedition_role, "(L|l)((ead)|(dr))")) |>
group_by(expedition_id, expedition_role) |>
summarize(count = n(), .groups = "drop") |>
pivot_wider(
names_from = expedition_role,
values_from = count,
values_fill = 0
)
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
filter(str_detect(expedition_role, "(L|l)((ead)|(dr))")) |>
group_by(expedition_id, expedition_role) |>
summarize(count = n(),
citizens = paste(citizenship, collapse = ","),
.groups = "drop") |>
pivot_wider(
names_from = expedition_role,
values_from = count,
values_fill = 0
)
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
filter(str_detect(expedition_role, "(L|l)((ead)|(dr))")) |>
group_by(expedition_id, expedition_role) |>
summarize(count = n(),
#citizens = paste(citizenship, collapse = ","),
.groups = "drop") |>
pivot_wider(
names_from = expedition_role,
values_from = count,
values_fill = 0
)
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
df2 <- members |>
filter(str_detect(expedition_role, "(L|l)((ead)|(dr))")) |>
group_by(expedition_id, expedition_role) |>
summarize(count = n(),
.groups = "drop") |>
pivot_wider(
names_from = expedition_role,
values_from = count,
values_fill = 0
)|>
mutate(total_leaders = rowSums(across(where(is.numeric))))
df2
(df3 <- inner_join(df1,df2, by="expedition_id"))
